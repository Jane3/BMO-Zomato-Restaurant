{"ast":null,"code":"var _jsxFileName = \"/Users/janeyou/Desktop/BMO-Zomato-Restaurant/src/Components/zomato.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './zomato.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nexport default function Zomato() {\n  // set the initial states to store the restaurent data\n  const [state, setState] = useState({\n    searchRest: \"\",\n    restData: [],\n    isSearch: false,\n    responseStatus: 'Please enter your location to search the nearby Zomato Restaurants'\n  });\n\n  const handleChangeRest = e => {\n    setState({ ...state,\n      searchRest: e.target.value //[searchQuery]: query\n\n    });\n  };\n\n  const clearSearch = () => {\n    setState({ ...state,\n      searchRest: \"\"\n    });\n  }; // get the City ID/Name, Longitude, and Latitude from the URL to be used to search restaurent data\n\n\n  const getLocationLatitude = city => {\n    return axios({\n      method: \"GET\",\n      url: `https://developers.zomato.com/api/v2.1/locations?query=${city}`,\n      headers: {\n        \"user-key\": \"ff4f897b8bc0d97ccd3ed25a6b951fd3\",\n        \"content-type\": \"application/json\"\n      }\n    }).then(response => {\n      //console.log(response)\n      let long = response.data.location_suggestions[0].longitude;\n      let lati = response.data.location_suggestions[0].latitude;\n      let cityId = response.data.location_suggestions[0].city_id; // console.log(long,lati)\n\n      return {\n        \"long\": long,\n        \"lati\": lati,\n        \"cityId\": cityId\n      };\n    }).catch(error => {\n      console.log(error);\n    });\n  }; // search the nearby restaurents by using the city ID/Name, Longitude and Latitude retrieved from the function getLocationLatitude\n\n\n  const searchRestaurant = async event => {\n    const query = event.target.value;\n    console.log(query);\n\n    if (event.key === 'Enter') {\n      setState({ ...state,\n        searchRest: query,\n        isSearch: true\n      });\n      await getLocationLatitude(query).then(response => {\n        console.log(response);\n        axios({\n          method: \"GET\",\n          url: `https://developers.zomato.com/api/v2.1/search?entity_id=${response.cityId}&entity_type=city&start=1&count=20&lat=${response.lati}&lon=${response.long}`,\n          headers: {\n            \"user-key\": \"ff4f897b8bc0d97ccd3ed25a6b951fd3\",\n            \"content-type\": \"application/json\"\n          }\n        }).then(response => {\n          //console.log(response);\n          let restaurantList = [];\n          let restaurantData = {};\n          let nearbyRest = response.data.restaurants;\n\n          for (var i of nearbyRest) {\n            restaurantData.name = i.restaurant.name;\n            restaurantData.url = i.restaurant.url;\n            restaurantData.average_cost_for_two = i.restaurant.average_cost_for_two;\n            restaurantData.has_online_delivery = i.restaurant.has_online_delivery ? \"Available\" : \"Not Available\";\n            restaurantData.rating = i.restaurant.user_rating.aggregate_rating;\n            restaurantData.cuisines = i.restaurant.cuisines.split(',');\n            restaurantData.rating_text = i.restaurant.user_rating.rating_text;\n            restaurantData.featured_image = i.restaurant.featured_image;\n            restaurantData.location = i.restaurant.location.address;\n            restaurantData.timing = i.restaurant.timings.split(',');\n            restaurantData.phone_numbers = i.restaurant.phone_numbers.split(',');\n            restaurantList.push(restaurantData);\n            restaurantData = {};\n          }\n\n          for (var i of restaurantList) {\n            if (i.cuisines.includes(\"Sandwich\")) {\n              console.log(\"looo\");\n            }\n          } //console.log(restaurantList);\n\n\n          setState({ ...state,\n            restData: restaurantList,\n            responseStatus: `Here is the list of Zomato-Restaurants based on your location entered`\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }).catch(Err => setState({ ...state,\n        responseStatus: \"Please Enter the correct location and try again\"\n      }));\n    }\n  }; //contains the JSX code to show the nearby restaurents onto the website \n\n\n  let RestaurantsJSX = state.restData.map((rest, ind) => {\n    return React.createElement(\"div\", {\n      className: \"Card\",\n      key: ind,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: rest.url,\n      key: ind,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"first-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: rest.featured_image,\n      alt: \"Low Internet Connectivity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"img-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"restaurant-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: rest.url,\n      key: ind,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, rest.name))), React.createElement(\"div\", {\n      className: \"restaurnat-place\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, rest.location)), React.createElement(\"div\", {\n      className: \"ratings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Ratings\"), React.createElement(\"div\", {\n      className: \"ratings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, rest.rating)))), React.createElement(\"div\", {\n      className: \"divider div-transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"CUISINES:\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, rest.cuisines.slice(0, 4).join(','))), React.createElement(\"div\", {\n      className: \"Row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"COST FOR TWO:\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, rest.average_cost_for_two)), React.createElement(\"div\", {\n      className: \"Row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"ONLINE_DELIVERY:\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, rest.has_online_delivery)), React.createElement(\"div\", {\n      className: \"Row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"TIMINGS:\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, rest.timing.slice(0, 2).join(','))), React.createElement(\"div\", {\n      className: \"Row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"RATING TEXT:\")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, rest.rating_text)))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Phone Numbers:\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, rest.phone_numbers.slice(0, 2).join(','))))));\n  });\n  if (state.isSearch) RestaurantsJSX = React.createElement(\"div\", {\n    className: \"progress-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"Zomato Restaurants\"), React.createElement(\"div\", {\n    className: \"inputCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"searchbar\",\n    type: \"text\",\n    value: state.searchCuisine,\n    onChange: handleChangeRest,\n    placeholder: \"Search Cuisines\",\n    onKeyPress: searchRestaurant,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btnSearch\",\n    onClick: clearSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Reset\")), React.createElement(\"div\", {\n    className: \"inputCards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, state.responseStatus, \" \"), RestaurantsJSX);\n}","map":{"version":3,"sources":["/Users/janeyou/Desktop/BMO-Zomato-Restaurant/src/Components/zomato.js"],"names":["React","useState","axios","CircularProgress","Zomato","state","setState","searchRest","restData","isSearch","responseStatus","handleChangeRest","e","target","value","clearSearch","getLocationLatitude","city","method","url","headers","then","response","long","data","location_suggestions","longitude","lati","latitude","cityId","city_id","catch","error","console","log","searchRestaurant","event","query","key","restaurantList","restaurantData","nearbyRest","restaurants","i","name","restaurant","average_cost_for_two","has_online_delivery","rating","user_rating","aggregate_rating","cuisines","split","rating_text","featured_image","location","address","timing","timings","phone_numbers","push","includes","Err","RestaurantsJSX","map","rest","ind","slice","join","searchCuisine"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport './zomato.css'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nexport default function Zomato() {\n\n    // set the initial states to store the restaurent data\n    const [state, setState] = useState({\n        searchRest:\"\",\n        restData: [],\n        isSearch: false,\n        responseStatus: 'Please enter your location to search the nearby Zomato Restaurants'\n    })\n\n    const handleChangeRest =(e)=>{\n        setState({\n            ...state,\n            searchRest: e.target.value,\n            //[searchQuery]: query\n        });\n    }\n\n\n    const clearSearch =() =>{\n        setState({\n            ...state,\n            searchRest : \"\"\n        })\n    }\n\n\n    // get the City ID/Name, Longitude, and Latitude from the URL to be used to search restaurent data\n    const getLocationLatitude = (city) => {\n        return axios({\n            method: \"GET\",\n            url: `https://developers.zomato.com/api/v2.1/locations?query=${city}`,\n            headers: {\n                \"user-key\": \"ff4f897b8bc0d97ccd3ed25a6b951fd3\",\n                \"content-type\": \"application/json\"\n            }\n        })\n            .then(response => {           \n                //console.log(response)\n                let long = response.data.location_suggestions[0].longitude;\n                let lati = response.data.location_suggestions[0].latitude;\n                let cityId = response.data.location_suggestions[0].city_id;\n                // console.log(long,lati)\n                return (\n                    {\n                        \"long\": long,\n                        \"lati\": lati,\n                        \"cityId\": cityId,\n                    }\n                );\n\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    // search the nearby restaurents by using the city ID/Name, Longitude and Latitude retrieved from the function getLocationLatitude\n    const searchRestaurant = async (event) => {\n        const query = event.target.value;\n        console.log(query); \n        if (event.key === 'Enter') {\n            setState({\n                ...state,\n                searchRest : query,\n                isSearch: true\n            })\n\n            \n            await getLocationLatitude(query)\n                .then(response => {\n                     console.log(response)\n                    axios({\n                        method: \"GET\",\n                        url: `https://developers.zomato.com/api/v2.1/search?entity_id=${response.cityId}&entity_type=city&start=1&count=20&lat=${response.lati}&lon=${response.long}`,\n                        headers: {\n                            \"user-key\": \"ff4f897b8bc0d97ccd3ed25a6b951fd3\",\n                            \"content-type\": \"application/json\"\n                        }\n                    })\n                        .then(response => {\n                            //console.log(response);\n                            let restaurantList = []\n                            let restaurantData = {}\n                            let nearbyRest = response.data.restaurants;\n                            for (var i of nearbyRest) {\n                                restaurantData.name = (i.restaurant.name)\n                                restaurantData.url = (i.restaurant.url)\n                                restaurantData.average_cost_for_two = (i.restaurant.average_cost_for_two)\n                                restaurantData.has_online_delivery = (i.restaurant.has_online_delivery) ? \"Available\" : \"Not Available\"\n                                restaurantData.rating = (i.restaurant.user_rating.aggregate_rating)\n                                restaurantData.cuisines = (i.restaurant.cuisines).split(',')\n                                restaurantData.rating_text = (i.restaurant.user_rating.rating_text)\n                                restaurantData.featured_image = i.restaurant.featured_image\n                                restaurantData.location = i.restaurant.location.address\n                                restaurantData.timing = (i.restaurant.timings).split(',')\n                                restaurantData.phone_numbers = (i.restaurant.phone_numbers).split(',')\n                                restaurantList.push(restaurantData)\n                                restaurantData = {}\n                            }\n\n                            for(var i of restaurantList){\n                                if(i.cuisines.includes(\"Sandwich\")){\n                                    console.log(\"looo\");\n                                }\n                            }\n\n                            //console.log(restaurantList);\n\n                            setState({\n                                ...state,\n                                restData: restaurantList,\n                                responseStatus: `Here is the list of Zomato-Restaurants based on your location entered`\n                            })\n                        })\n                        .catch(error => {\n                            console.log(error);\n                        });\n                })\n                .catch(Err => setState({ ...state, responseStatus: \"Please Enter the correct location and try again\" }))\n        }\n    }\n\n\n    //contains the JSX code to show the nearby restaurents onto the website \n    let RestaurantsJSX = state.restData.map((rest, ind) => {\n        return (\n            <div className=\"Card\" key={ind}>\n                <div className=\"content\">\n                    <div>\n                        <article><a href={rest.url} key={ind} target=\"_blank\"></a>\n                            <div className=\"first-div\">\n                                <div className=\"img\">\n                                    <img src={rest.featured_image} alt=\"Low Internet Connectivity\" />\n                                </div>\n                                <div className=\"img-details\">\n                                    <div className=\"details\">\n                                        <div className=\"restaurant-name\">\n\n                                            <h3><a href={rest.url} key={ind} target=\"_blank\">{rest.name}</a></h3>\n                                        </div>\n                                        <div className=\"restaurnat-place\">{rest.location}</div>\n                                    </div>\n                                    <div className=\"ratings\">\n                                        <span>Ratings</span>\n                                        <div className=\"ratings\">{rest.rating}</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"divider div-transparent\"></div>\n                            <div className=\"text\">\n                                <div className=\"Row\">\n                                    <span><b>CUISINES:</b></span>\n                                    <span>{rest.cuisines.slice(0, 4).join(',')}</span>\n                                </div>\n                                <div className=\"Row\">\n                                    <span><b>COST FOR TWO:</b></span>\n                                    <span>{rest.average_cost_for_two}</span>\n                                </div>\n                                <div className=\"Row\">\n                                    <span><b>ONLINE_DELIVERY:</b></span>\n                                    <span>{rest.has_online_delivery}</span>\n                                </div>\n                                <div className=\"Row\">\n                                    <span><b>TIMINGS:</b></span>\n                                    <span>{rest.timing.slice(0, 2).join(',')}</span>\n                                </div>\n                                <div className=\"Row\">\n                                    <span><b>RATING TEXT:</b></span>\n                                    <span>{rest.rating_text}</span>\n                                </div>\n                            </div>\n                        </article><hr />\n                        <div className=\"Row\">\n                            <span>Phone Numbers:</span>\n                            <span>{rest.phone_numbers.slice(0, 2).join(',')}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    })\n\n    \n    \n\n    if (state.isSearch ) RestaurantsJSX = \n        <div className=\"progress-bar\"><CircularProgress color=\"secondary\" /></div>\n\n\n    return (\n        <div>\n            <h1>Zomato Restaurants</h1>\n            <div className=\"inputCard\" >\n               \n                <input  className=\"searchbar\"\n                   type=\"text\" \n                   value={state.searchCuisine}\n                   onChange={handleChangeRest}\n                   placeholder=\"Search Cuisines\"\n                   onKeyPress={searchRestaurant} \n                />\n\n                <button className=\"btnSearch\" onClick={clearSearch}>Reset</button>\n            </div>\n           \n            <div className=\"inputCards\">{state.responseStatus} </div>\n                {RestaurantsJSX}\n        </div>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}